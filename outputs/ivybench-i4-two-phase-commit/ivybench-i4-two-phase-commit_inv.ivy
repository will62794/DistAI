#lang ivy1.7

################################################################################
#
# Types, relations and functions describing state of the network
#
################################################################################

type node

# epochs are totally ordered with a least element called zero
relation vote_yes(N: node)
relation vote_no(N: node)
relation alive(N: node)
relation go_commit(N: node)
relation go_abort(N: node)
relation decide_commit(N: node)
relation decide_abort(N: node)

individual abort_flag: bool

################################################################################
#
# Protocol description
#
################################################################################

after init {
    vote_yes(N) := false;
    vote_no(N) := false;
    alive(N) := true;
    go_commit(N) := false;
    go_abort(N) := false;
    decide_commit(N) := false;
    decide_abort(N) := false;
    abort_flag := false;
}

action vote1(n: node) = {
    require alive(n);
    require ~vote_no(n);
    require ~decide_commit(n);
    require ~decide_abort(n);
    vote_yes(n) := true;
}

action vote2(n: node) = {
    require alive(n);
    require ~vote_yes(n);
    require ~decide_commit(n);
    require ~decide_abort(n);
    vote_no(n) := true;
    abort_flag := true;
    decide_abort(n) := true;
}

action fail(n: node) = {
    require alive(n);
    alive(n) := false;
    abort_flag := true;
}

action go1 = {
    require ~go_commit(N);
    require ~go_abort(N);
    require vote_yes(N);
    go_commit(N) := true;
}

action go2 = {
    require ~go_commit(N);
    require ~go_abort(N);
    require exists N. vote_no(N) | ~alive(N);
    go_abort(N) := true;
}

action commit(n: node) = {
    require alive(n);
    require go_commit(n);
    decide_commit(n) := true;
}

action abort(n: node) = {
    require alive(n);
    require go_abort(n);
    decide_abort(n) := true;
}

export vote1
export vote2
export fail
export go1
export go2
export commit
export abort

# the safety property
invariant [1000000] (decide_commit(N) -> ~decide_abort(N2)) & (decide_commit(N) -> vote_yes(N2)) & (decide_abort(N) -> abort_flag)

invariant [1000] forall N1:node. alive(N1) | ~vote_no(N1) | ~decide_commit(N1)
invariant [1001] forall N1:node. alive(N1) | go_commit(N1) | ~decide_commit(N1)
invariant [1002] forall N1:node. go_commit(N1) | ~decide_commit(N1) | ~abort_flag
invariant [1003] forall N1:node. vote_yes(N1) | ~decide_commit(N1) | ~abort_flag
invariant [1004] forall N1:node. ~go_abort(N1) | ~decide_commit(N1) | ~abort_flag
invariant [1005] forall N1:node. go_abort(N1) | ~decide_commit(N1) | ~decide_abort(N1)
invariant [1006] forall N1:node. vote_no(N1) | ~decide_commit(N1) | ~decide_abort(N1)
invariant [1007] forall N1:node. vote_yes(N1) | go_abort(N1) | ~decide_commit(N1)
invariant [1008] forall N1:node. vote_no(N1) | go_commit(N1) | ~decide_commit(N1)
invariant [1009] forall N1:node. vote_yes(N1) | vote_no(N1) | ~decide_commit(N1)
invariant [1010] forall N1:node. alive(N1) | ~go_abort(N1) | ~decide_commit(N1)
invariant [1011] forall N1:node. ~go_commit(N1) | ~decide_commit(N1) | ~decide_abort(N1)
invariant [1012] forall N1:node. ~vote_no(N1) | ~go_commit(N1) | ~decide_commit(N1)
invariant [1013] forall N1:node. go_commit(N1) | go_abort(N1) | ~decide_commit(N1)
invariant [1014] forall N1:node. abort_flag | ~vote_no(N1) | ~decide_commit(N1)
invariant [1015] forall N1:node. go_commit(N1) | abort_flag | ~decide_commit(N1)
invariant [1016] forall N1:node. vote_yes(N1) | alive(N1) | ~decide_commit(N1)
invariant [1017] forall N1:node. alive(N1) | abort_flag | ~decide_commit(N1)
invariant [1018] forall N1:node. vote_yes(N1) | abort_flag | ~decide_commit(N1)
invariant [1019] forall N1:node. ~vote_yes(N1) | ~decide_commit(N1) | ~decide_abort(N1)
invariant [1020] forall N1:node. ~go_commit(N1) | ~go_abort(N1) | ~decide_commit(N1)
invariant [1021] forall N1:node. ~go_commit(N1) | ~decide_abort(N1)
invariant [1022] forall N1:node. ~vote_yes(N1) | ~go_abort(N1) | ~decide_commit(N1)
invariant [1023] forall N1:node. ~vote_yes(N1) | ~vote_no(N1) | ~decide_commit(N1)
invariant [1024] forall N1:node. abort_flag | ~vote_no(N1)
invariant [1025] forall N1:node. vote_no(N1) | ~go_abort(N1) | ~decide_commit(N1)
invariant [1026] forall N1:node. ~alive(N1) | ~go_abort(N1) | ~decide_commit(N1)
invariant [1027] forall N1:node. ~vote_no(N1) | ~decide_commit(N1) | ~abort_flag
invariant [1028] forall N1:node. ~vote_no(N1) | ~alive(N1) | ~decide_commit(N1)
invariant [1029] forall N1:node. decide_abort(N1) | ~go_abort(N1) | ~decide_commit(N1)
invariant [1030] forall N1:node. alive(N1) | abort_flag
invariant [1031] forall N1:node. go_commit(N1) | ~alive(N1) | ~decide_commit(N1)
invariant [1032] forall N1:node. ~decide_commit(N1) | ~decide_abort(N1) | ~abort_flag
invariant [1033] forall N1:node. go_commit(N1) | decide_abort(N1) | ~decide_commit(N1)
invariant [1034] forall N1:node. go_abort(N1) | ~vote_no(N1) | ~decide_commit(N1)
invariant [1035] forall N1:node. ~vote_no(N1) | ~decide_commit(N1)
invariant [1036] forall N1:node. ~go_abort(N1) | ~decide_commit(N1)
invariant [1037] forall N1:node. go_commit(N1) | ~vote_yes(N1) | ~decide_commit(N1)
invariant [1038] forall N1:node. vote_yes(N1) | decide_abort(N1) | ~decide_commit(N1)
invariant [1039] forall N1:node. decide_abort(N1) | ~vote_no(N1)
invariant [1040] forall N1:node. ~decide_commit(N1) | ~decide_abort(N1)
invariant [1041] forall N1:node. vote_yes(N1) | ~go_commit(N1)
invariant [1042] forall N1:node. vote_yes(N1) | ~alive(N1) | ~decide_commit(N1)
invariant [1043] forall N1:node. vote_no(N1) | go_abort(N1) | ~decide_abort(N1)
invariant [1044] forall N1:node. go_commit(N1) | ~decide_commit(N1)
invariant [1045] forall N1:node. ~alive(N1) | ~decide_commit(N1) | ~decide_abort(N1)
invariant [1046] forall N1:node. alive(N1) | ~decide_commit(N1) | ~decide_abort(N1)
invariant [1047] forall N1:node. vote_yes(N1) | ~go_commit(N1) | ~decide_commit(N1)
invariant [1048] forall N1:node. ~vote_no(N1) | ~go_commit(N1)
invariant [1049] forall N1:node. abort_flag | ~decide_commit(N1) | ~decide_abort(N1)
invariant [1050] forall N1:node. ~go_commit(N1) | ~go_abort(N1)
invariant [1051] forall N1:node. decide_abort(N1) | ~vote_no(N1) | ~decide_commit(N1)
invariant [1052] forall N1:node. abort_flag | ~go_abort(N1)
invariant [1053] forall N1:node. ~vote_yes(N1) | ~vote_no(N1)
invariant [1054] forall N1:node. vote_yes(N1) | ~decide_commit(N1)
invariant [1055] forall N1:node. abort_flag | ~decide_abort(N1)
invariant [1056] forall N1:node. abort_flag | ~go_abort(N1) | ~decide_commit(N1)
invariant [1057] forall N1:node. go_abort(N1) | ~vote_yes(N1) | ~decide_abort(N1)
invariant [2000] forall N1:node, N2:node. N1 ~= N2 -> vote_yes(N1) | ~go_commit(N2)
invariant [2001] forall N1:node, N2:node. N1 ~= N2 -> go_commit(N1) | ~go_commit(N2)
invariant [2002] forall N1:node, N2:node. N1 ~= N2 -> ~vote_no(N1) | ~go_commit(N2)
invariant [2003] forall N1:node, N2:node. N1 ~= N2 -> go_abort(N1) | ~go_abort(N2)
invariant [2004] forall N1:node, N2:node. N1 ~= N2 -> ~go_commit(N1) | ~decide_abort(N2)
invariant [2005] forall N1:node, N2:node. N1 ~= N2 -> ~go_commit(N1) | ~go_abort(N2)
invariant [2006] forall N1:node, N2:node. N1 ~= N2 -> vote_no(N1) | go_abort(N2) | ~decide_abort(N1)
invariant [2007] forall N1:node, N2:node. N1 ~= N2 -> go_abort(N1) | ~vote_yes(N2) | ~decide_abort(N2)
