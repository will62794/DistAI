#lang ivy1.7

type key
type value
type node

relation table(N:node, K:key, V:value)
relation owner(N:node, K:key)
relation transfer_msg(N:node, K:key, V:value)

after init {
    table(N, K, V) := false;
    transfer_msg(N, K, V) := false;
    assume(owner(N1, K) & owner(N2, K) -> N1 = N2);
    assume(forall K. exists N. owner(N, K));
}

action reshard(k: key, v: value, n_old: node, n_new: node) = {
    require table(n_old, k, v);
    
    table(n_old, k, v) := false;
    owner(n_old, k) := false;
    transfer_msg(n_new, k, v) := true;
}

action recv_transfer_msg(n: node, k: key, v: value) = {
    require transfer_msg(n, k, v);

    transfer_msg(n, k, v) := false;
    table(n, k, v) := true;
    owner(n, k) := true;
}

action put(n: node, k: key, v: value) = {
    require owner(n, k);

    table(n, k, V) := (V = v);
}

export reshard
export recv_transfer_msg
export put

invariant [1000000] (exists N,K,V. transfer_msg(N,K,V)) | (forall K. exists N. owner(N,K))

#invariant [help_1] forall K. (exists N. owner(N, K)) | (exists N, V. transfer_msg(N, K, V))

invariant [1000] forall K1:key, K2:key, V1:value, N1:node. K1 ~= K2 -> ~table(N1,K1,V1) | ~table(N1,K2,V1) | ~owner(N1,K1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K2,V1)
invariant [2000] forall K1:key, K2:key, V1:value, N1:node, N2:node. K1 ~= K2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V1) | ~table(N2,K1,V1) | ~table(N2,K2,V1) | ~transfer_msg(N1,K1,V1)
invariant [2001] forall K1:key, K2:key, V1:value, N1:node, N2:node. K1 ~= K2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K1,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K1,V1)
invariant [2002] forall K1:key, K2:key, V1:value, N1:node, N2:node. K1 ~= K2 & N1 ~= N2 -> ~owner(N1,K1) | ~owner(N1,K2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K1,V1)
invariant [2003] forall K1:key, K2:key, V1:value, N1:node, N2:node. K1 ~= K2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V1) | ~table(N2,K1,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K2,V1)
invariant [2004] forall K1:key, K2:key, V1:value, N1:node, N2:node. K1 ~= K2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V1) | ~table(N2,K1,V1) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K1,V1)
invariant [2005] forall K1:key, K2:key, V1:value, N1:node, N2:node. K1 ~= K2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~owner(N1,K2) | ~owner(N2,K2) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K2,V1)
invariant [2006] forall K1:key, K2:key, V1:value, N1:node, N2:node. K1 ~= K2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V1) | ~table(N2,K1,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V1)
invariant [2007] forall K1:key, K2:key, V1:value, N1:node, N2:node. K1 ~= K2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K2,V1) | ~owner(N1,K2) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K2,V1)
invariant [2008] forall K1:key, K2:key, V1:value, N1:node, N2:node. K1 ~= K2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V1) | ~table(N2,K1,V1) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K2,V1)
invariant [2009] forall K1:key, K2:key, V1:value, N1:node, N2:node. K1 ~= K2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K1,V1)
invariant [2010] forall K1:key, K2:key, V1:value, N1:node, N2:node. K1 ~= K2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K2,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K1,V1)
invariant [2011] forall K1:key, K2:key, V1:value, N1:node, N2:node. K1 ~= K2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~owner(N1,K1) | ~owner(N1,K2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K2,V1)
invariant [2012] forall K1:key, K2:key, V1:value, N1:node, N2:node. K1 ~= K2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K2,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K2,V1)
invariant [2013] forall K1:key, K2:key, V1:value, N1:node, N2:node. K1 ~= K2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K2,V1) | ~owner(N1,K2) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K1,V1)
invariant [2014] forall K1:key, K2:key, V1:value, N1:node, N2:node. K1 ~= K2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~owner(N1,K1) | ~owner(N2,K2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V1)
invariant [2015] forall K1:key, K2:key, V1:value, N1:node, N2:node. K1 ~= K2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~owner(N1,K2) | ~owner(N2,K2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K2,V1)
invariant [2016] forall K1:key, K2:key, V1:value, N1:node, N2:node. K1 ~= K2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~owner(N2,K1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K2,V1)
invariant [2017] forall K1:key, K2:key, V1:value, N1:node, N2:node. K1 ~= K2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~owner(N1,K2) | ~owner(N2,K1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V1)
invariant [2018] forall K1:key, K2:key, V1:value, N1:node, N2:node. K1 ~= K2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~owner(N1,K2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K1,V1)
invariant [2019] forall K1:key, K2:key, V1:value, N1:node, N2:node. K1 ~= K2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V1) | ~owner(N2,K1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V1)
invariant [2020] forall K1:key, K2:key, V1:value, N1:node, N2:node. K1 ~= K2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~owner(N2,K2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K2,V1)
invariant [2021] forall K1:key, K2:key, V1:value, N1:node, N2:node. K1 ~= K2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~owner(N1,K2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K2,V1)
invariant [2022] forall K1:key, K2:key, V1:value, N1:node, N2:node. K1 ~= K2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V1) | ~owner(N2,K1) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K2,V1)
invariant [2023] forall K1:key, K2:key, V1:value, N1:node, N2:node. K1 ~= K2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~owner(N2,K1) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K2,V1)
invariant [2024] forall K1:key, K2:key, V1:value, N1:node, N2:node. K1 ~= K2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~owner(N1,K2) | ~owner(N2,K1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K2,V1)
invariant [2025] forall K1:key, K2:key, V1:value, N1:node, N2:node. K1 ~= K2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K1,V1) | ~owner(N1,K1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K2,V1)
invariant [2026] forall K1:key, K2:key, V1:value, N1:node, N2:node. K1 ~= K2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~owner(N2,K2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K2,V1)
invariant [2027] forall K1:key, K2:key, V1:value, N1:node, N2:node. K1 ~= K2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K1,V1) | ~owner(N1,K2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K2,V1)
invariant [3000] forall K1:key, K2:key, V1:value, V2:value, N1:node. K1 ~= K2 & V1 ~= V2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~transfer_msg(N1,K2,V1)
invariant [3001] forall K1:key, K2:key, V1:value, V2:value, N1:node. K1 ~= K2 & V1 ~= V2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~owner(N1,K2) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N1,K2,V2)
invariant [3002] forall K1:key, K2:key, V1:value, V2:value, N1:node. K1 ~= K2 & V1 ~= V2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N1,K2,V2)
invariant [3003] forall K1:key, K2:key, V1:value, V2:value, N1:node. K1 ~= K2 & V1 ~= V2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~transfer_msg(N1,K2,V2)
invariant [3004] forall K1:key, K2:key, V1:value, V2:value, N1:node. K1 ~= K2 & V1 ~= V2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~owner(N1,K2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K2,V2)
invariant [3005] forall K1:key, K2:key, V1:value, V2:value, N1:node. K1 ~= K2 & V1 ~= V2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K2,V1)
invariant [3006] forall K1:key, K2:key, V1:value, V2:value, N1:node. K1 ~= K2 & V1 ~= V2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~table(N1,K2,V2)
invariant [3007] forall K1:key, K2:key, V1:value, V2:value, N1:node. K1 ~= K2 & V1 ~= V2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K2,V2)
invariant [3008] forall K1:key, K2:key, V1:value, V2:value, N1:node. K1 ~= K2 & V1 ~= V2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N1,K2,V1)
invariant [3009] forall K1:key, K2:key, V1:value, V2:value, N1:node. K1 ~= K2 & V1 ~= V2 -> ~table(N1,K1,V1) | ~table(N1,K2,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N1,K2,V1)
invariant [3010] forall K1:key, K2:key, V1:value, V2:value, N1:node. K1 ~= K2 & V1 ~= V2 -> ~table(N1,K1,V1) | ~owner(N1,K2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N1,K2,V2)
invariant [3011] forall K1:key, K2:key, V1:value, V2:value, N1:node. K1 ~= K2 & V1 ~= V2 -> ~table(N1,K1,V1) | ~table(N1,K2,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N1,K2,V1)
invariant [3012] forall K1:key, K2:key, V1:value, V2:value, N1:node. K1 ~= K2 & V1 ~= V2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~owner(N1,K2) | ~transfer_msg(N1,K2,V1)
invariant [3013] forall K1:key, K2:key, V1:value, V2:value, N1:node. K1 ~= K2 & V1 ~= V2 -> ~table(N1,K1,V1) | ~owner(N1,K2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N1,K2,V1)
invariant [4000] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K2,V1)
invariant [4001] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~transfer_msg(N2,K1,V2)
invariant [4002] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K2,V1)
invariant [4003] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N1,K2,V2)
invariant [4004] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K1,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N1,K2,V2)
invariant [4005] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~transfer_msg(N2,K2,V1)
invariant [4006] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N2,K1,V2)
invariant [4007] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~owner(N2,K1) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K2,V2)
invariant [4008] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~transfer_msg(N1,K2,V2)
invariant [4009] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~table(N1,K2,V2) | ~transfer_msg(N2,K1,V1)
invariant [4010] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> owner(N1,K1) | owner(N2,K2) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N2,K1,V1)
invariant [4011] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K2,V2)
invariant [4012] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~owner(N2,K2) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N1,K2,V2)
invariant [4013] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K2,V1) | ~transfer_msg(N2,K2,V2)
invariant [4014] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~table(N2,K2,V1) | ~transfer_msg(N2,K2,V1)
invariant [4015] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~table(N2,K1,V1) | ~transfer_msg(N1,K1,V1)
invariant [4016] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~owner(N2,K2) | ~transfer_msg(N1,K1,V2)
invariant [4017] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~owner(N2,K1) | ~transfer_msg(N1,K2,V1)
invariant [4018] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K2,V1) | ~transfer_msg(N1,K2,V2) | ~transfer_msg(N2,K2,V2)
invariant [4019] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~table(N2,K2,V1) | ~transfer_msg(N1,K1,V2)
invariant [4020] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K2,V1) | ~transfer_msg(N2,K1,V2)
invariant [4021] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K2,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V1)
invariant [4022] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K2,V1)
invariant [4023] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K1,V1)
invariant [4024] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> transfer_msg(N1,K1,V1) | ~table(N1,K2,V1) | ~table(N1,K2,V2) | ~transfer_msg(N1,K2,V2) | ~transfer_msg(N2,K2,V2)
invariant [4025] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K1,V2)
invariant [4026] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K2,V2) | ~transfer_msg(N2,K2,V2)
invariant [4027] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K2,V2)
invariant [4028] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K2,V1) | ~transfer_msg(N2,K2,V1)
invariant [4029] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K2,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K1,V2)
invariant [4030] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K1,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V2) | ~transfer_msg(N2,K2,V1)
invariant [4031] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V2) | ~table(N2,K1,V2) | ~transfer_msg(N1,K2,V2) | ~transfer_msg(N2,K2,V2)
invariant [4032] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~table(N2,K2,V2)
invariant [4033] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K2,V2)
invariant [4034] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~owner(N2,K1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K1,V2)
invariant [4035] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~table(N2,K1,V1) | ~transfer_msg(N2,K1,V2)
invariant [4036] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N2,K2,V2)
invariant [4037] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~table(N2,K2,V1) | ~transfer_msg(N1,K1,V2)
invariant [4038] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K2,V1) | ~transfer_msg(N2,K1,V1)
invariant [4039] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~table(N2,K1,V2) | ~transfer_msg(N1,K1,V1)
invariant [4040] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K2,V1) | ~transfer_msg(N1,K2,V2)
invariant [4041] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~table(N2,K1,V2) | ~transfer_msg(N1,K1,V2)
invariant [4042] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~table(N2,K1,V2) | ~transfer_msg(N1,K2,V2)
invariant [4043] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V1) | ~table(N2,K1,V2) | ~transfer_msg(N1,K2,V2) | ~transfer_msg(N2,K2,V2)
invariant [4044] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~table(N2,K2,V1) | ~transfer_msg(N1,K2,V1)
invariant [4045] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K2,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K2,V2)
invariant [4046] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~table(N2,K1,V2) | ~transfer_msg(N2,K1,V2)
invariant [4047] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~owner(N1,K2) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K2,V1) | ~transfer_msg(N2,K2,V2)
invariant [4048] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~owner(N1,K2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N2,K1,V2)
invariant [4049] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~transfer_msg(N1,K2,V2) | ~transfer_msg(N2,K1,V1)
invariant [4050] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N2,K2,V2)
invariant [4051] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~transfer_msg(N1,K2,V2) | ~transfer_msg(N2,K1,V2)
invariant [4052] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~table(N2,K1,V1) | ~transfer_msg(N1,K1,V2)
invariant [4053] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K2,V2)
invariant [4054] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~table(N2,K2,V1) | ~transfer_msg(N1,K2,V2)
invariant [4055] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~owner(N1,K2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V2)
invariant [4056] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~owner(N2,K1) | ~transfer_msg(N1,K1,V1)
invariant [4057] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~owner(N2,K1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K2,V1)
invariant [4058] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K2,V2)
invariant [4059] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~owner(N2,K1) | ~transfer_msg(N1,K1,V2)
invariant [4060] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~owner(N1,K2) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N1,K2,V2) | ~transfer_msg(N2,K2,V1)
invariant [4061] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V1)
invariant [4062] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~transfer_msg(N1,K2,V2) | ~transfer_msg(N2,K2,V2)
invariant [4063] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~table(N2,K2,V1) | ~transfer_msg(N2,K1,V2)
invariant [4064] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N2,K1,V2)
invariant [4065] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K2,V1) | ~transfer_msg(N2,K1,V2) | ~transfer_msg(N2,K2,V2)
invariant [4066] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V2)
invariant [4067] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K1,V1)
invariant [4068] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K2,V1) | ~owner(N1,K2) | ~transfer_msg(N1,K2,V2)
invariant [4069] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K1,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K2,V2) | ~transfer_msg(N2,K1,V1)
invariant [4070] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~owner(N1,K2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K2,V1)
invariant [4071] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~transfer_msg(N2,K1,V2) | ~transfer_msg(N2,K2,V1)
invariant [4072] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~owner(N2,K2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V1)
invariant [4073] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V1) | ~table(N2,K1,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V2)
invariant [4074] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~transfer_msg(N2,K1,V2) | ~transfer_msg(N2,K2,V2)
invariant [4075] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K2,V1) | ~owner(N2,K1) | ~transfer_msg(N2,K1,V2)
invariant [4076] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V1) | ~table(N2,K1,V2) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N2,K1,V2)
invariant [4077] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K1,V2) | ~owner(N1,K2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V1)
invariant [4078] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~table(N2,K2,V2) | ~transfer_msg(N1,K1,V2)
invariant [4079] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~table(N2,K2,V2) | ~transfer_msg(N2,K1,V1)
invariant [4080] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K2,V1)
invariant [4081] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K2,V1)
invariant [4082] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V2) | ~table(N2,K1,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K2,V2)
invariant [4083] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K2,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V2)
invariant [4084] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~table(N2,K2,V2) | ~transfer_msg(N2,K1,V2)
invariant [4085] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V2) | ~table(N2,K1,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V1)
invariant [4086] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K2,V1) | ~owner(N2,K1) | ~transfer_msg(N2,K1,V1)
invariant [4087] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> owner(N1,K1) | owner(N1,K2) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N2,K1,V1)
invariant [4088] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K2,V2)
invariant [4089] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~owner(N1,K2) | ~transfer_msg(N1,K1,V2)
invariant [4090] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V2) | ~table(N2,K1,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K2,V1)
invariant [4091] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K2,V1) | ~table(N2,K2,V2) | ~transfer_msg(N1,K1,V1)
invariant [4092] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K2,V1) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N1,K2,V2) | ~transfer_msg(N2,K1,V1)
invariant [4093] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K2,V1)
invariant [4094] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K2,V1) | ~owner(N2,K1) | ~transfer_msg(N1,K1,V1)
invariant [4095] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K1,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K2,V1)
invariant [4096] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K2,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N2,K2,V1)
invariant [4097] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V1) | ~table(N2,K1,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V2)
invariant [4098] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K2,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N2,K1,V2)
invariant [4099] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N2,K1,V1)
invariant [4100] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K2,V1) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K2,V1)
invariant [4101] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K1,V2)
invariant [4102] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~table(N2,K2,V1)
invariant [4103] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K2,V1)
invariant [4104] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K2,V1) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K2,V2)
invariant [4105] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K2,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K1,V2)
invariant [4106] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~owner(N1,K2) | ~owner(N2,K2) | ~transfer_msg(N1,K2,V1)
invariant [4107] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~owner(N2,K2) | ~transfer_msg(N1,K2,V2) | ~transfer_msg(N2,K2,V1) | ~transfer_msg(N2,K2,V2)
invariant [4108] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~owner(N1,K2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V1)
invariant [4109] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V2) | ~table(N2,K1,V1) | ~transfer_msg(N1,K2,V2) | ~transfer_msg(N2,K1,V1)
invariant [4110] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~owner(N2,K1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K2,V1)
invariant [4111] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K2,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N2,K1,V1)
invariant [4112] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~owner(N2,K1) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K1,V1)
invariant [4113] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K1,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K2,V1) | ~transfer_msg(N2,K2,V2)
invariant [4114] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~owner(N2,K1) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K2,V1)
invariant [4115] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K1,V1)
invariant [4116] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K2,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K2,V2) | ~transfer_msg(N2,K1,V1)
invariant [4117] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K1,V2) | ~transfer_msg(N2,K2,V1)
invariant [4118] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~owner(N2,K2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K2,V2)
invariant [4119] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K1,V2) | ~transfer_msg(N2,K2,V1)
invariant [4120] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V1) | ~table(N2,K1,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K2,V1)
invariant [4121] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~owner(N1,K2) | ~transfer_msg(N1,K1,V1)
invariant [4122] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K1,V2)
invariant [4123] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K1,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N2,K2,V1)
invariant [4124] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~owner(N2,K2) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K2,V1)
invariant [4125] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K2,V1)
invariant [4126] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K1,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N2,K2,V1)
invariant [4127] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K1,V2) | ~transfer_msg(N2,K2,V1)
invariant [4128] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~owner(N2,K1) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K1,V2)
invariant [4129] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V1) | ~table(N2,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N2,K1,V1)
invariant [4130] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~owner(N1,K2) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K1,V2)
invariant [4131] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K2,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K2,V2)
invariant [4132] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~owner(N1,K2) | ~owner(N2,K1) | ~transfer_msg(N1,K1,V1)
invariant [4133] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K2,V2)
invariant [4134] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V1) | ~table(N2,K1,V2) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K1,V2)
invariant [4135] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V1) | ~table(N2,K1,V2) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K1,V2)
invariant [4136] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V1) | ~owner(N2,K1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N2,K1,V2)
invariant [4137] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K2,V1)
invariant [4138] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V1) | ~owner(N2,K1) | ~transfer_msg(N2,K1,V2) | ~transfer_msg(N2,K2,V2)
invariant [4139] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K1,V2)
invariant [4140] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K2,V1) | ~transfer_msg(N2,K2,V2)
invariant [4141] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K2,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K1,V1)
invariant [4142] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K1,V2)
invariant [4143] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K1,V2)
invariant [4144] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K1,V2)
invariant [4145] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V2) | ~table(N2,K1,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V2)
invariant [4146] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K1,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K2,V1) | ~transfer_msg(N2,K2,V2)
invariant [4147] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V2) | ~owner(N2,K1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N2,K1,V1)
invariant [4148] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~owner(N2,K2) | ~transfer_msg(N1,K1,V2)
invariant [4149] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K1,V2) | ~owner(N1,K2) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K2,V1)
invariant [4150] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~table(N2,K2,V1) | ~transfer_msg(N1,K1,V1)
invariant [4151] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V2) | ~table(N2,K1,V2) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N2,K1,V1)
invariant [4152] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V1) | ~owner(N2,K1) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K1,V2)
invariant [4153] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K1,V2) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N1,K2,V2)
invariant [4154] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K1,V2) | ~owner(N1,K2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K2,V2)
invariant [4155] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K2,V1)
invariant [4156] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V2) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K1,V1)
invariant [4157] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K2,V1) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K2,V1)
invariant [4158] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~owner(N1,K2) | ~owner(N2,K2) | ~transfer_msg(N1,K2,V2) | ~transfer_msg(N2,K2,V1)
invariant [4159] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K1,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K2,V2) | ~transfer_msg(N2,K2,V2)
invariant [4160] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V1) | ~table(N2,K1,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K2,V2)
invariant [4161] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K1,V2) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N1,K2,V2) | ~transfer_msg(N2,K2,V1)
invariant [4162] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V2) | ~owner(N2,K1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V1)
invariant [4163] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K1,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K2,V1)
invariant [4164] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N1,K2,V2) | ~transfer_msg(N2,K2,V1) | ~transfer_msg(N2,K2,V2)
invariant [4165] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~owner(N1,K2) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N1,K2,V2) | ~transfer_msg(N2,K1,V2)
invariant [4166] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N1,K2,V2) | ~transfer_msg(N2,K1,V1)
invariant [4167] forall K1:key, K2:key, V1:value, V2:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N1,K2,V2)
invariant [5000] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N1,K2,V3)
invariant [5001] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K2,V3)
invariant [5002] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 -> transfer_msg(N1,K1,V1) | ~table(N1,K2,V1) | ~table(N1,K2,V2) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N1,K2,V3)
invariant [5003] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K1,V3) | ~table(N1,K2,V1)
invariant [5004] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K1,V3) | ~owner(N1,K2)
invariant [5005] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V3) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N1,K2,V3)
invariant [5006] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 -> transfer_msg(N1,K1,V1) | ~table(N1,K2,V1) | ~table(N1,K2,V2) | ~table(N1,K2,V3) | ~transfer_msg(N1,K2,V1)
invariant [5007] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~owner(N1,K2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V3)
invariant [5008] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K1,V3) | ~table(N1,K2,V1) | ~table(N1,K2,V2)
invariant [5009] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K1,V3) | ~table(N1,K2,V1) | ~transfer_msg(N1,K1,V1)
invariant [5010] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V3) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N1,K2,V1)
invariant [5011] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N1,K2,V2)
invariant [5012] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V3)
invariant [5013] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N1,K2,V2)
invariant [5014] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 -> ~table(N1,K1,V1) | ~owner(N1,K2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N1,K1,V3)
invariant [5015] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V3) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V3)
invariant [5016] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V3) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N1,K2,V2)
invariant [5017] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 -> ~table(N1,K1,V1) | ~table(N1,K2,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N1,K1,V3)
invariant [5018] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~owner(N1,K2) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N1,K2,V1)
invariant [5019] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~owner(N1,K2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K2,V3)
invariant [5020] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N1,K1,V3)
invariant [5021] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 -> ~table(N1,K1,V1) | ~table(N1,K2,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N1,K1,V3)
invariant [5022] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~table(N1,K2,V3)
invariant [5023] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N1,K2,V3)
invariant [5024] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 -> ~owner(N1,K1) | ~owner(N1,K2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N1,K1,V3)
invariant [5025] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 -> ~owner(N1,K1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N1,K2,V1)
invariant [5026] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V3) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K2,V3)
invariant [5027] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~table(N1,K2,V3) | ~transfer_msg(N1,K1,V1)
invariant [5028] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 -> ~table(N1,K1,V1) | ~table(N1,K2,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N1,K2,V3)
invariant [5029] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~table(N1,K2,V2) | ~transfer_msg(N1,K1,V3)
invariant [5030] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 -> ~table(N1,K1,V1) | ~owner(N1,K2) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N1,K2,V2) | ~transfer_msg(N1,K2,V3)
invariant [6000] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V3) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N2,K1,V1)
invariant [6001] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> table(N1,K1,V1) | ~table(N2,K2,V2) | ~table(N2,K2,V3) | ~transfer_msg(N1,K2,V2) | ~transfer_msg(N2,K2,V2)
invariant [6002] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K1,V3) | ~transfer_msg(N2,K2,V2)
invariant [6003] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V3) | ~table(N2,K2,V3)
invariant [6004] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K2,V1) | ~table(N2,K2,V3)
invariant [6005] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K1,V3) | ~table(N1,K2,V1) | ~transfer_msg(N2,K2,V1)
invariant [6006] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K1,V3) | ~transfer_msg(N2,K2,V1)
invariant [6007] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V3) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K1,V3)
invariant [6008] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V3) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K2,V1)
invariant [6009] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K2,V1) | ~transfer_msg(N2,K2,V3)
invariant [6010] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K2,V3) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N2,K2,V3)
invariant [6011] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V3) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K1,V1)
invariant [6012] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K2,V1) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N2,K1,V1)
invariant [6013] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N2,K1,V2)
invariant [6014] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V3) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V3)
invariant [6015] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K2,V3)
invariant [6016] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K2,V3) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V3)
invariant [6017] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V3) | ~transfer_msg(N2,K2,V1)
invariant [6018] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K1,V3) | ~table(N2,K2,V1)
invariant [6019] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K1,V3)
invariant [6020] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K2,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N2,K1,V3)
invariant [6021] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~transfer_msg(N2,K1,V3) | ~transfer_msg(N2,K2,V3)
invariant [6022] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N1,K2,V2) | ~transfer_msg(N2,K1,V2)
invariant [6023] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V3) | ~table(N2,K1,V3) | ~transfer_msg(N2,K1,V3)
invariant [6024] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K1,V3)
invariant [6025] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V3) | ~transfer_msg(N2,K2,V2)
invariant [6026] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K1,V3) | ~table(N2,K1,V1) | ~transfer_msg(N2,K2,V1)
invariant [6027] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K2,V3) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K1,V1)
invariant [6028] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V3) | ~transfer_msg(N2,K2,V3)
invariant [6029] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~transfer_msg(N2,K2,V1) | ~transfer_msg(N2,K2,V3)
invariant [6030] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N2,K2,V1) | ~transfer_msg(N2,K2,V3)
invariant [6031] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V3) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N2,K2,V1)
invariant [6032] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K1,V3) | ~table(N2,K2,V1) | ~transfer_msg(N2,K2,V1)
invariant [6033] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> owner(N1,K1) | owner(N2,K2) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K1,V3)
invariant [6034] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V1) | ~table(N2,K1,V2) | ~transfer_msg(N1,K2,V3) | ~transfer_msg(N2,K1,V2)
invariant [6035] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V1) | ~table(N2,K1,V2) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N2,K1,V3)
invariant [6036] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~owner(N1,K2) | ~transfer_msg(N2,K2,V3)
invariant [6037] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~transfer_msg(N2,K1,V3) | ~transfer_msg(N2,K2,V2)
invariant [6038] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> transfer_msg(N1,K1,V1) | ~table(N1,K2,V2) | ~table(N1,K2,V3) | ~transfer_msg(N1,K2,V2) | ~transfer_msg(N2,K2,V2)
invariant [6039] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K1,V3)
invariant [6040] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K1,V3) | ~table(N2,K2,V1) | ~transfer_msg(N1,K1,V2)
invariant [6041] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~table(N2,K2,V3) | ~transfer_msg(N1,K1,V2)
invariant [6042] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~owner(N1,K1) | ~owner(N2,K2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N1,K1,V3)
invariant [6043] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> transfer_msg(N1,K1,V1) | ~table(N2,K2,V2) | ~table(N2,K2,V3) | ~transfer_msg(N1,K2,V2) | ~transfer_msg(N2,K2,V2)
invariant [6044] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K1,V3) | ~owner(N1,K2) | ~owner(N2,K1)
invariant [6045] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K1,V3) | ~owner(N2,K2) | ~transfer_msg(N1,K1,V1)
invariant [6046] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V3) | ~table(N2,K2,V1) | ~transfer_msg(N2,K1,V3)
invariant [6047] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K1,V3) | ~owner(N2,K2) | ~transfer_msg(N1,K2,V1)
invariant [6048] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K1,V3) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K2,V1)
invariant [6049] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V3) | ~owner(N1,K2) | ~transfer_msg(N1,K1,V3)
invariant [6050] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V2) | ~table(N2,K1,V3) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K2,V1)
invariant [6051] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V3) | ~table(N2,K2,V3) | ~transfer_msg(N2,K2,V3)
invariant [6052] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V3) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K2,V2)
invariant [6053] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K1,V3) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K2,V1)
invariant [6054] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~table(N1,K2,V2) | ~transfer_msg(N2,K1,V3)
invariant [6055] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N2,K1,V3) | ~transfer_msg(N2,K2,V1) | ~transfer_msg(N2,K2,V2)
invariant [6056] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V3) | ~owner(N2,K1) | ~transfer_msg(N1,K1,V3)
invariant [6057] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N2,K1,V1)
invariant [6058] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~table(N2,K1,V1) | ~transfer_msg(N1,K2,V3)
invariant [6059] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V3) | ~transfer_msg(N2,K1,V3) | ~transfer_msg(N2,K2,V3)
invariant [6060] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K1,V3) | ~transfer_msg(N2,K2,V1)
invariant [6061] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K2,V3) | ~transfer_msg(N2,K2,V1)
invariant [6062] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K2,V1) | ~table(N2,K2,V3) | ~transfer_msg(N1,K1,V1)
invariant [6063] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~table(N2,K1,V3) | ~transfer_msg(N2,K1,V3)
invariant [6064] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K2,V3) | ~transfer_msg(N1,K2,V1)
invariant [6065] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K2,V3)
invariant [6066] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~table(N2,K2,V2) | ~transfer_msg(N2,K1,V3)
invariant [6067] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V2) | ~table(N2,K1,V3) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K2,V3)
invariant [6068] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V3) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N1,K2,V3)
invariant [6069] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K2,V3)
invariant [6070] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N2,K1,V3)
invariant [6071] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K2,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N1,K2,V3)
invariant [6072] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~owner(N1,K1) | ~owner(N2,K2) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N1,K2,V2) | ~transfer_msg(N1,K2,V3)
invariant [6073] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~table(N2,K1,V3) | ~transfer_msg(N1,K1,V2)
invariant [6074] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V3) | ~table(N2,K1,V1) | ~transfer_msg(N1,K1,V1)
invariant [6075] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V3) | ~table(N2,K2,V1) | ~transfer_msg(N2,K1,V2)
invariant [6076] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V3) | ~table(N2,K1,V3) | ~transfer_msg(N2,K2,V3)
invariant [6077] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K1,V3)
invariant [6078] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V3) | ~transfer_msg(N1,K2,V3) | ~transfer_msg(N2,K1,V3)
invariant [6079] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V3) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K2,V3)
invariant [6080] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V2) | ~table(N2,K1,V1) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N2,K1,V1)
invariant [6081] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V3) | ~transfer_msg(N1,K2,V3) | ~transfer_msg(N2,K1,V1)
invariant [6082] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N2,K1,V1)
invariant [6083] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K2,V3) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K2,V1)
invariant [6084] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V3) | ~transfer_msg(N2,K1,V1)
invariant [6085] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V3) | ~transfer_msg(N1,K2,V3) | ~transfer_msg(N2,K1,V3)
invariant [6086] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V3) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K1,V2)
invariant [6087] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V3) | ~table(N2,K2,V3) | ~transfer_msg(N1,K2,V3)
invariant [6088] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K2,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V3)
invariant [6089] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V3) | ~table(N2,K1,V3) | ~transfer_msg(N1,K1,V3)
invariant [6090] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V3) | ~table(N2,K2,V1) | ~transfer_msg(N1,K1,V1)
invariant [6091] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V3) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K1,V3)
invariant [6092] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V3) | ~transfer_msg(N2,K1,V3) | ~transfer_msg(N2,K2,V3)
invariant [6093] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V2) | ~table(N2,K1,V2) | ~transfer_msg(N2,K1,V2) | ~transfer_msg(N2,K1,V3)
invariant [6094] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V3) | ~transfer_msg(N2,K1,V3)
invariant [6095] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K2,V3)
invariant [6096] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V3) | ~transfer_msg(N2,K2,V1) | ~transfer_msg(N2,K2,V3)
invariant [6097] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V3)
invariant [6098] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> table(N1,K1,V1) | owner(N2,K2) | ~table(N2,K2,V2) | ~table(N2,K2,V3) | ~transfer_msg(N1,K2,V2)
invariant [6099] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K1,V2) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K1,V3)
invariant [6100] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~table(N2,K2,V3) | ~transfer_msg(N1,K1,V2)
invariant [6101] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V3) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K2,V1)
invariant [6102] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V3) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N2,K2,V1)
invariant [6103] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K2,V3) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K2,V1)
invariant [6104] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N1,K2,V3)
invariant [6105] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V3) | ~transfer_msg(N1,K2,V3) | ~transfer_msg(N2,K2,V3)
invariant [6106] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V2) | ~table(N2,K1,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V3)
invariant [6107] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K1,V3)
invariant [6108] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N2,K1,V2)
invariant [6109] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V3) | ~table(N2,K2,V3) | ~transfer_msg(N2,K1,V3)
invariant [6110] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~owner(N2,K2) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N1,K2,V3)
invariant [6111] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V3) | ~table(N2,K2,V3) | ~transfer_msg(N2,K1,V3)
invariant [6112] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V2) | ~table(N2,K1,V1) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N2,K1,V3)
invariant [6113] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~transfer_msg(N1,K2,V3) | ~transfer_msg(N2,K1,V1)
invariant [6114] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V3) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V1)
invariant [6115] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N2,K1,V3)
invariant [6116] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~transfer_msg(N2,K1,V2) | ~transfer_msg(N2,K2,V3)
invariant [6117] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~transfer_msg(N2,K2,V3)
invariant [6118] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~owner(N2,K1) | ~transfer_msg(N2,K1,V3) | ~transfer_msg(N2,K2,V3)
invariant [6119] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V3) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K2,V1)
invariant [6120] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V3) | ~table(N2,K2,V3) | ~transfer_msg(N1,K1,V1)
invariant [6121] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K1,V3) | ~owner(N2,K1) | ~transfer_msg(N1,K2,V1)
invariant [6122] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V3) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K2,V3)
invariant [6123] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K1,V3) | ~transfer_msg(N2,K2,V1) | ~transfer_msg(N2,K2,V2)
invariant [6124] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K2,V3) | ~transfer_msg(N2,K2,V3)
invariant [6125] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V3) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N1,K2,V1)
invariant [6126] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K2,V1) | ~table(N2,K2,V3) | ~transfer_msg(N1,K2,V2)
invariant [6127] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V2) | ~table(N2,K1,V3) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V2)
invariant [6128] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N2,K2,V3)
invariant [6129] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V1) | ~table(N2,K1,V1) | ~transfer_msg(N2,K2,V2) | ~transfer_msg(N2,K2,V3)
invariant [6130] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V3) | ~transfer_msg(N2,K1,V3) | ~transfer_msg(N2,K2,V1)
invariant [6131] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K2,V1) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K1,V3)
invariant [6132] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K2,V3) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N1,K2,V2)
invariant [6133] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~owner(N2,K1) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N2,K2,V1)
invariant [6134] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~owner(N1,K2) | ~transfer_msg(N1,K2,V2) | ~transfer_msg(N1,K2,V3) | ~transfer_msg(N2,K2,V2)
invariant [6135] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K2,V3) | ~transfer_msg(N2,K2,V1)
invariant [6136] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~owner(N2,K2) | ~transfer_msg(N2,K2,V1) | ~transfer_msg(N2,K2,V2) | ~transfer_msg(N2,K2,V3)
invariant [6137] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~owner(N2,K2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V3)
invariant [6138] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K2,V1) | ~transfer_msg(N1,K2,V3) | ~transfer_msg(N2,K2,V1)
invariant [6139] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V2) | ~table(N2,K1,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V3)
invariant [6140] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K2,V2) | ~transfer_msg(N2,K2,V3)
invariant [6141] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~owner(N1,K2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K2,V2) | ~transfer_msg(N2,K2,V3)
invariant [6142] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K1,V1) | ~owner(N1,K2) | ~transfer_msg(N1,K2,V2) | ~transfer_msg(N1,K2,V3)
invariant [6143] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V3) | ~transfer_msg(N2,K2,V1)
invariant [6144] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K2,V3)
invariant [6145] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K1,V2) | ~transfer_msg(N2,K2,V3)
invariant [6146] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V2) | ~table(N2,K1,V3) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N1,K2,V2)
invariant [6147] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V2) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N2,K1,V3)
invariant [6148] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K2,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N1,K1,V3)
invariant [6149] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V2) | ~table(N2,K1,V3) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K1,V3)
invariant [6150] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K2,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N2,K1,V2) | ~transfer_msg(N2,K1,V3)
invariant [6151] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K1,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N2,K2,V3)
invariant [6152] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~owner(N2,K2) | ~transfer_msg(N1,K2,V3) | ~transfer_msg(N2,K2,V3)
invariant [6153] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K2,V3) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K1,V2)
invariant [6154] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V2) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K1,V3)
invariant [6155] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~owner(N1,K2) | ~owner(N2,K2) | ~transfer_msg(N1,K2,V2) | ~transfer_msg(N2,K2,V3)
invariant [6156] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K2,V2) | ~transfer_msg(N2,K2,V3)
invariant [6157] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~owner(N1,K1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N2,K2,V1)
invariant [6158] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~owner(N2,K2) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N1,K2,V2) | ~transfer_msg(N1,K2,V3)
invariant [6159] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V1) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K1,V2) | ~transfer_msg(N2,K1,V3)
invariant [6160] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K1,V2)
invariant [6161] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K2,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N2,K1,V3)
invariant [6162] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K1,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N1,K2,V3)
invariant [6163] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V2) | ~table(N2,K1,V3) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V1)
invariant [6164] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~owner(N1,K1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K1,V2) | ~transfer_msg(N2,K2,V3)
invariant [6165] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K2,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N2,K1,V3)
invariant [6166] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~transfer_msg(N1,K2,V1) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K1,V2) | ~transfer_msg(N2,K1,V3)
invariant [6167] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K1,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K2,V3) | ~transfer_msg(N2,K2,V2)
invariant [6168] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~owner(N2,K1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N1,K2,V1)
invariant [6169] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~owner(N1,K1) | ~owner(N2,K1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N2,K2,V3)
invariant [6170] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K2,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N2,K1,V2) | ~transfer_msg(N2,K1,V3)
invariant [6171] forall K1:key, K2:key, V1:value, V2:value, V3:value, N1:node, N2:node. K1 ~= K2 & V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K2,V1) | ~transfer_msg(N2,K1,V2) | ~transfer_msg(N2,K1,V3)
invariant [8000] forall K1:key, V1:value, N1:node, N2:node. N1 ~= N2 -> ~table(N1,K1,V1) | ~owner(N1,K1) | ~owner(N2,K1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V1)
invariant [9000] forall K1:key, V1:value, V2:value, N1:node. V1 ~= V2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V2)
invariant [9001] forall K1:key, V1:value, V2:value, N1:node. V1 ~= V2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N1,K1,V1)
invariant [10000] forall K1:key, V1:value, V2:value, N1:node, N2:node. V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K1,V2)
invariant [10001] forall K1:key, V1:value, V2:value, N1:node, N2:node. V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~owner(N2,K1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K1,V2)
invariant [10002] forall K1:key, V1:value, V2:value, N1:node, N2:node. V1 ~= V2 & N1 ~= N2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K1,V2)
invariant [10003] forall K1:key, V1:value, V2:value, N1:node, N2:node. V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K1,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N2,K1,V2)
invariant [10004] forall K1:key, V1:value, V2:value, N1:node, N2:node. V1 ~= V2 & N1 ~= N2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~transfer_msg(N2,K1,V2)
invariant [10005] forall K1:key, V1:value, V2:value, N1:node, N2:node. V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V1)
invariant [10006] forall K1:key, V1:value, V2:value, N1:node, N2:node. V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K1,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N2,K1,V2)
invariant [10007] forall K1:key, V1:value, V2:value, N1:node, N2:node. V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~owner(N2,K1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N2,K1,V2)
invariant [10008] forall K1:key, V1:value, V2:value, N1:node, N2:node. V1 ~= V2 & N1 ~= N2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~table(N2,K1,V2)
invariant [10009] forall K1:key, V1:value, V2:value, N1:node, N2:node. V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V2)
invariant [10010] forall K1:key, V1:value, V2:value, N1:node, N2:node. V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~table(N2,K1,V2) | ~transfer_msg(N1,K1,V1)
invariant [10011] forall K1:key, V1:value, V2:value, N1:node, N2:node. V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~owner(N2,K1) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K1,V2)
invariant [10012] forall K1:key, V1:value, V2:value, N1:node, N2:node. V1 ~= V2 & N1 ~= N2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~transfer_msg(N2,K1,V1)
invariant [10013] forall K1:key, V1:value, V2:value, N1:node, N2:node. V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~owner(N2,K1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V1)
invariant [10014] forall K1:key, V1:value, V2:value, N1:node, N2:node. V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K1,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N2,K1,V1)
invariant [10015] forall K1:key, V1:value, V2:value, N1:node, N2:node. V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N2,K1,V1)
invariant [10016] forall K1:key, V1:value, V2:value, N1:node, N2:node. V1 ~= V2 & N1 ~= N2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N2,K1,V1) | ~table(N2,K1,V2) | ~transfer_msg(N2,K1,V1)
invariant [10017] forall K1:key, V1:value, V2:value, N1:node, N2:node. V1 ~= V2 & N1 ~= N2 -> ~owner(N1,K1) | ~owner(N2,K1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N2,K1,V1)
invariant [10018] forall K1:key, V1:value, V2:value, N1:node, N2:node. V1 ~= V2 & N1 ~= N2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~owner(N2,K1) | ~transfer_msg(N2,K1,V1)
invariant [10019] forall K1:key, V1:value, V2:value, N1:node, N2:node. V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~owner(N2,K1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V2)
invariant [10020] forall K1:key, V1:value, V2:value, N1:node, N2:node. V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~owner(N1,K1) | ~owner(N2,K1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V2)
invariant [10021] forall K1:key, V1:value, V2:value, N1:node, N2:node. V1 ~= V2 & N1 ~= N2 -> ~owner(N1,K1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K1,V2)
invariant [10022] forall K1:key, V1:value, V2:value, N1:node, N2:node. V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K1,V2)
invariant [10023] forall K1:key, V1:value, V2:value, N1:node, N2:node. V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N2,K1,V2)
invariant [10024] forall K1:key, V1:value, V2:value, N1:node, N2:node. V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~owner(N1,K1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N2,K1,V2)
invariant [10025] forall K1:key, V1:value, V2:value, N1:node, N2:node. V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K1,V2)
invariant [10026] forall K1:key, V1:value, V2:value, N1:node, N2:node. V1 ~= V2 & N1 ~= N2 -> ~table(N1,K1,V1) | ~owner(N1,K1) | ~owner(N2,K1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V2)
invariant [11000] forall K1:key, V1:value, V2:value, V3:value, N1:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 -> ~table(N1,K1,V1) | ~owner(N1,K1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N1,K1,V3)
invariant [12000] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K1,V3) | ~transfer_msg(N2,K1,V1)
invariant [12001] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K1,V3) | ~table(N2,K1,V1)
invariant [12002] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N2,K1,V3)
invariant [12003] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K1,V3) | ~table(N2,K1,V1) | ~transfer_msg(N1,K1,V1)
invariant [12004] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K1,V2) | ~transfer_msg(N2,K1,V3)
invariant [12005] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V3) | ~owner(N2,K1) | ~transfer_msg(N2,K1,V3)
invariant [12006] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~owner(N2,K1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V3)
invariant [12007] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K1,V2)
invariant [12008] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K1,V3) | ~table(N2,K1,V1) | ~transfer_msg(N1,K1,V2)
invariant [12009] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~owner(N2,K1) | ~transfer_msg(N2,K1,V3)
invariant [12010] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> transfer_msg(N1,K1,V1) | ~table(N2,K1,V2) | ~table(N2,K1,V3) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N2,K1,V2)
invariant [12011] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~owner(N1,K1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K1,V2) | ~transfer_msg(N2,K1,V3)
invariant [12012] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K1,V3) | ~owner(N2,K1) | ~transfer_msg(N1,K1,V1)
invariant [12013] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~table(N2,K1,V3) | ~transfer_msg(N1,K1,V2)
invariant [12014] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K1,V3) | ~table(N2,K1,V1) | ~table(N2,K1,V2)
invariant [12015] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V2) | ~transfer_msg(N2,K1,V3)
invariant [12016] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N2,K1,V1)
invariant [12017] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~table(N2,K1,V2) | ~transfer_msg(N1,K1,V3)
invariant [12018] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~table(N2,K1,V3) | ~transfer_msg(N1,K1,V1)
invariant [12019] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V3) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V3)
invariant [12020] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V3) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V1)
invariant [12021] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V3)
invariant [12022] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K1,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V2) | ~transfer_msg(N2,K1,V3)
invariant [12023] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K1,V3)
invariant [12024] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~owner(N2,K1) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N2,K1,V1)
invariant [12025] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V3)
invariant [12026] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~table(N2,K1,V3) | ~transfer_msg(N1,K1,V3)
invariant [12027] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K1,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N1,K1,V3)
invariant [12028] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~owner(N2,K1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V3)
invariant [12029] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V3) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V2)
invariant [12030] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K1,V3)
invariant [12031] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V3) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K1,V2)
invariant [12032] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~transfer_msg(N2,K1,V2) | ~transfer_msg(N2,K1,V3)
invariant [12033] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K1,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N2,K1,V3)
invariant [12034] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~owner(N1,K1) | ~owner(N2,K1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N2,K1,V3)
invariant [12035] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~owner(N2,K1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N2,K1,V1)
invariant [12036] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V3) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K1,V3)
invariant [12037] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N2,K1,V2)
invariant [12038] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~owner(N2,K1) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K1,V3)
invariant [12039] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N2,K1,V3)
invariant [12040] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N2,K1,V2) | ~transfer_msg(N2,K1,V3)
invariant [12041] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> owner(N1,K1) | owner(N2,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N1,K1,V3)
invariant [12042] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N1,K1,V3)
invariant [12043] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N2,K1,V2)
invariant [12044] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> owner(N1,K1) | ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N2,K1,V1)
invariant [12045] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K1,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N2,K1,V3)
invariant [12046] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N2,K1,V1)
invariant [12047] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K1,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K1,V3)
invariant [12048] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K1,V2)
invariant [12049] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N2,K1,V1)
invariant [12050] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V3) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N2,K1,V1)
invariant [12051] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~owner(N2,K1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N2,K1,V2) | ~transfer_msg(N2,K1,V3)
invariant [12052] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K1,V2) | ~transfer_msg(N2,K1,V3)
invariant [12053] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N2,K1,V2)
invariant [12054] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~owner(N1,K1) | ~owner(N2,K1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N1,K1,V3)
invariant [12055] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~owner(N1,K1) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N2,K1,V1)
invariant [12056] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N1,K1,V2) | ~table(N2,K1,V3) | ~transfer_msg(N1,K1,V1) | ~transfer_msg(N2,K1,V3)
invariant [12057] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~owner(N2,K1) | ~transfer_msg(N2,K1,V1) | ~transfer_msg(N2,K1,V2) | ~transfer_msg(N2,K1,V3)
invariant [12058] forall K1:key, V1:value, V2:value, V3:value, N1:node, N2:node. V1 ~= V2 & V1 ~= V3 & V2 ~= V3 & N1 ~= N2 -> ~table(N1,K1,V1) | ~table(N2,K1,V2) | ~transfer_msg(N1,K1,V2) | ~transfer_msg(N1,K1,V3) | ~transfer_msg(N2,K1,V3)
